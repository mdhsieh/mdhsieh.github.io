{"version":3,"sources":["Components/Header.js","Components/MainFeaturedPost.js","Components/Markdown.js","Components/PreviewBlogPost.js","Components/Main.js","Components/Sidebar.js","Components/Footer.js","Writing/blog-post.1.md","Writing/blog-post.2.md","Writing/blog-post.3.md","Components/ScrollToTop.js","Components/Blog.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","sections","title","_jsxs","React","children","_jsx","Toolbar","sx","borderBottom","borderColor","Typography","component","variant","color","align","noWrap","flex","justifyContent","overflowX","map","section","Link","p","flexShrink","RouterLink","to","url","MainFeaturedPost","post","path","Paper","position","backgroundColor","mb","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","concat","image","style","display","src","alt","imageText","Box","top","bottom","right","left","Grid","container","item","md","xs","pr","gutterBottom","paragraph","description","linkText","options","overrides","h1","h2","h3","h4","a","li","mt","typography","Markdown","ReactMarkdown","PreviewBlogPost","cutoff","className","substring","Main","posts","getPathFromMarkdown","py","Divider","Sidebar","archives","social","elevation","bgcolor","whiteSpace","width","network","href","Stack","direction","spacing","alignItems","icon","name","Copyright","Date","getFullYear","Footer","Container","maxWidth","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","sidebar","GitHubIcon","text","replace","toLowerCase","defaultTheme","createTheme","Blog","setPosts","useState","postUrls","post1","post2","appPosts","setAppPosts","appPostUrls","post3","Promise","all","fetch","then","res","texts","Router","ThemeProvider","theme","CssBaseline","Routes","Route","element","appPost","App","Component","constructor","super","componentDidMount","render","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.52087622.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport {Link as RouterLink } from 'react-router-dom';\n\nfunction Header(props) {\n  const { sections, title } = props;\n\n  return (\n    <React.Fragment>\n      <Toolbar sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          sx={{ flex: 1 }}\n        >\n          {title}\n        </Typography>\n      </Toolbar>\n      <Toolbar\n        component=\"nav\"\n        variant=\"dense\"\n        sx={{ justifyContent: 'space-between', overflowX: 'auto' }}\n      >\n        {sections.map((section) => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"h6\"\n            sx={{ p: 1, flexShrink: 0 }}\n            component={RouterLink}\n            to={section.url}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport {Link as RouterLink } from 'react-router-dom';\n\nfunction MainFeaturedPost(props) {\n  const { post, path } = props;\n\n  return (\n    <Paper\n      sx={{\n        position: 'relative',\n        backgroundColor: 'grey.800',\n        color: '#fff',\n        mb: 4,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundImage: `url(${post.image})`,\n      }}\n    >\n      {/* Increase the priority of the hero background image */}\n      {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\n      <Box\n        sx={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          backgroundColor: 'rgba(0,0,0,.3)',\n        }}\n      />\n      <Grid container>\n        <Grid item md={6}>\n          <Box\n            sx={{\n              position: 'relative',\n              p: { xs: 3, md: 6 },\n              pr: { md: 0 },\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n            <Link variant=\"subtitle1\" \n              component={RouterLink} to={path}>\n              {post.linkText}\n            </Link>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.shape({\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    imageText: PropTypes.string.isRequired,\n    linkText: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MainFeaturedPost;\n","import * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\n\nfunction MarkdownListItem(props) {\n  return <Box component=\"li\" sx={{ mt: 1, typography: 'body1' }} {...props} />;\n}\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n        component: 'h1',\n      },\n    },\n    h2: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h6', component: 'h2' },\n    },\n    h3: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'subtitle1' },\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true,\n      },\n    },\n    p: {\n      component: Typography,\n      props: { paragraph: true },\n    },\n    a: { component: Link },\n    li: {\n      component: MarkdownListItem,\n    },\n  },\n};\n\nexport default function Markdown(props) {\n  return <ReactMarkdown options={options} {...props} />;\n}\n","import { React } from \"react\";\nimport Markdown from './Markdown';\nimport Link from '@mui/material/Link';\nimport {Link as RouterLink } from 'react-router-dom';\n\nfunction PreviewBlogPost(props) {\n    const { post, cutoff, path } = props;\n\n    return (\n        <div key={post.substring(0, 40)}>\n          <Markdown className=\"markdown\" key={post.substring(0, 40)}>\n            {post.substring(0, cutoff) + '...'}\n          </Markdown>\n          <Link\n            variant=\"body1\"\n            component={RouterLink}\n            to={path}\n          >\n            Continue reading...\n          </Link>\n        </div>\n    );\n}\n\nexport default PreviewBlogPost;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n\nimport MainFeaturedPost from './MainFeaturedPost';\n\nimport PreviewBlogPost from './PreviewBlogPost';\nimport { getPathFromMarkdown } from './Blog';\n\nfunction Main(props) {\n  const { posts, title } = props;\n\n  const mainFeaturedPost = {\n    title: 'Customized Streaks Calendar with FSCalendar',\n    description:\n      \"Make a calendar in your iOS app with colors filled according to user progress. Useful if you display daily achievements or streaks.\",\n    image: 'images/writing/fscalendar_main.jpg',\n    imageText: 'Customized streaks calendar',\n    linkText: 'Continue reading…',\n  };\n\n  return (\n    <main>\n    {posts[0] && <MainFeaturedPost post={mainFeaturedPost} path={\"/\" + getPathFromMarkdown(posts[0])}/>}\n    <Grid\n      item\n      xs={12}\n      md={8}\n      sx={{\n        '& .markdown': {\n          py: 3,\n        },\n      }}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Divider />\n      {posts.map((post) => (\n        <PreviewBlogPost post={post} cutoff={200} path={\"/\" + getPathFromMarkdown(post)} key={post.substring(0, 40)}></PreviewBlogPost>\n      ))}\n    </Grid>\n    </main>\n  );\n}\n\nMain.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Main;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nfunction Sidebar(props) {\n  const { archives, description, social, title, image } = props;\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Paper elevation={0} sx={{ p: 2, bgcolor: 'grey.200', whiteSpace: \"pre-wrap\" }}>\n        {<img src={image} width = \"80\" />}\n        <Typography variant=\"h6\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography>{description}</Typography>\n      </Paper>\n     \n      <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n        Social\n      </Typography>\n      {social.map((network) => (\n        <Link\n          display=\"block\"\n          variant=\"body1\"\n          href={network.url}\n          key={network.name}\n          sx={{ mb: 0.5 }}\n        >\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <network.icon />\n            <span>{network.name}</span>\n          </Stack>\n        </Link>\n      ))}\n    </Grid>\n  );\n}\n\nSidebar.propTypes = {\n  archives: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  description: PropTypes.string.isRequired,\n  social: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.elementType,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Sidebar;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"\">\n        Michael Hsieh\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction Footer(props) {\n  const { description, title } = props;\n\n  return (\n    <Box component=\"footer\" sx={{ bgcolor: 'background.paper', py: 6 }}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </Box>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/blog-post.1.f02a610f.md\";","export default __webpack_public_path__ + \"static/media/blog-post.2.9c36d4c0.md\";","export default __webpack_public_path__ + \"static/media/blog-post.3.5f082902.md\";","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Header from './Header';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport post1 from '../Writing/blog-post.1.md';\nimport post2 from '../Writing/blog-post.2.md';\nimport post3 from '../Writing/blog-post.3.md';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nimport Markdown from './Markdown';\n\nimport ScrollToTop from \"./ScrollToTop\";\n\nconst sections = [\n  { title: 'Apps', url: '/apps' },\n  { title: 'Writing', url: '/' },\n  { title: 'About', url: '/about' },\n];\n\nconst sidebar = {\n  title: 'About Me',\n  description:\n    `I\\'m Michael Hsieh, a software engineer. My focus as of early 2024 is mobile app development.\n\nMy path through tech has been anything but linear, ranging from apps, to websites, machine learning, cloud projects, robotics, and games. I\\'ve been in a bunch of roles in both large and small companies, like developer, researcher, unofficial manager, and teacher. \n    \nI\\'ve been coding since I was 16, but I believe number of years doing stuff is not as good a benchmark as what you\\'ve done during that time. \n\nTo that end, I make software, write articles, and share what I\\'ve learned with other people who may need a little help in their journey like me. Thanks for stopping by my blog.`,\n  archives: [\n    { title: 'February 2024', url: '#' },\n  ],\n  social: [\n    { name: 'GitHub', icon: GitHubIcon, url: 'https://github.com/mdhsieh/' },\n  ],\n  image: 'images/profilepic.png',\n};\n\n// Create a path string based off the first couple words in a markdown post,\n// replace any non-alphanumeric characters, like spaces and markdown syntax, with dashes, and then\n// remove any leading or trailing dashes.\nexport const getPathFromMarkdown = function(text) {\n  return text\n          .substring(0, 25)\n          .replace(/[^a-z0-9]+/gi, '-')\n          .replace(/^-+/, '').replace(/-+$/, '')\n          .toLowerCase()\n}\n\nconst defaultTheme = createTheme();\n\nexport default function Blog() {\n  const [posts, setPosts] = useState([])\n  const postUrls = [post1, post2]\n\n  const [appPosts, setAppPosts] = useState([])\n  const appPostUrls = [post3]\n\n  useEffect(() => {\n    Promise.all(\n      postUrls.map(url =>\n        fetch(url)\n          .then(res => res.text())\n      )\n    ).then(texts => {\n      setPosts(texts)\n    });\n  }, [])\n\n  useEffect(() => {\n    Promise.all(\n      appPostUrls.map(url =>\n        fetch(url)\n          .then(res => res.text())\n      )\n    ).then(texts => {\n      setAppPosts(texts)\n    });\n  }, [])\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <ThemeProvider theme={defaultTheme}>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <Header title=\"Michael's Blog\" sections={sections} />\n            <Routes>\n\n              <Route path=\"/\" element={\n                  <Main title=\"Writing\" posts={posts} />\n              }></Route>\n\n              <Route path=\"/about\" element={\n                  <Sidebar\n                    title={sidebar.title}\n                    description={sidebar.description}\n                    archives={sidebar.archives}\n                    social={sidebar.social}\n                    image={sidebar.image}\n                  />\n              }></Route>\n\n              {posts.map(post => <Route key={post.substring(0, 40)} path={\"/\" + getPathFromMarkdown(post) } element={\n                <Markdown className=\"markdown\">\n                  {post}\n                </Markdown>\n              }></Route>)}\n\n              <Route path=\"/apps\" element={\n                  appPosts && appPosts.map(appPost =>\n                  <Markdown className=\"markdown\" key={appPost.substring(0, 40)}>\n                    {appPost}\n                  </Markdown>)\n              }></Route>\n\n            </Routes>\n        </Container>\n        <Footer\n          title=\"\"\n          description=\"\"\n        />\n      </ThemeProvider>\n    </Router>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Blog from './Components/Blog'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount(){\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Blog/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}